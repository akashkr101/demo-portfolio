pipeline {
    agent any
    environment {
        dockerhub = 'dockerhub-credentials-id'  // Replace with your DockerHub credentials ID
        buildTag = "v1.0.${env.BUILD_ID}"       // Set the build tag (you can customize this)
    }
    stages {
        stage('checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'Jenkins-webhooks', url: 'https://github.com/akashkr101/portfolio-v2.git']])
            }
        }

        stage('Install & Build') {
            steps {
                sh 'npm install'
                sh 'npm run build'
            }
        }

        stage('Clean Up') {
            steps {
                script {
                    sh '''
                        # Get a list of all running containers
                        containers=$(docker ps --filter "ancestor=portfolio-v2" -q)
                        # Check if there are any running containers
                        if [ -z "$containers" ]; then
                            echo "No 'portfolio' containers are running."
                        else
                            echo "Stopping and removing portfolio containers."
                            docker stop $containers
                            docker rm $containers
                        fi
                    '''
                    sh '''
                        # Get a list of all Docker images
                        images=$(docker images --filter "reference=*portfolio*" -q)
                        # Check if there are any Docker images
                        if [ -z "$images" ]; then
                            echo "No 'portfolio' images found."
                        else
                            echo "Removing 'portfolio' images."
                            docker rmi -f $images
                        fi
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def dockerUsername = "akash63"
                    def imageName = "${dockerUsername}/demo"
                    def dockerImage = docker.build("${imageName}:${buildTag}")
                    // Define your image name and assign the built image to the dockerImage variable
                    dockerImage = docker.build("${imageName}:${buildTag}")
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    // Push the image to DockerHub with the specified tags
                    docker.withRegistry('', dockerhub) {
                        dockerImage.push("${buildTag}")  // Push with specific buildTag
                        dockerImage.push("latest")       // Push with 'latest' tag
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    sh 'docker run -d -p 7000:80 portfolio-v2'
                    sh 'docker ps -a'
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline success"
        }
        failure {
            echo "Pipeline failed"
        }
    }
}
